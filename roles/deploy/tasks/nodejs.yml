---
# -e 'deploy_src=/path/to/local deploy_secrets_src=/path/to/local/secrets/file deploy_exclude_path=/path/to/exclude/file deploy_build_id=XXXX' --tags=nodejs
- name: Set deploy_dir_prefix
  set_fact: deploy_dir_prefix="/tmp"

- name: Set deploy_dir_parent
  set_fact: deploy_dir_parent="releases"

- name: Set deploy_dest
  set_fact: deploy_dest="/home/nodejs/sites"

- name: Set deploy_src
  shell: "basename '{{ deploy_src }}'"
  register: site

- name: Set deploy_site variable
  set_fact: deploy_site={{ site.stdout }}

- name: Set deploy_tmp_dir
  set_fact: deploy_tmp_dir={{ deploy_dir_prefix }}/{{ deploy_dir_parent }}/{{ deploy_build_id }}

- name: Set deploy_secrets_dest
  set_fact: deploy_secrets_dest={{ deploy_dest }}/{{ deploy_site }}/config/secrets.json

- name: Create release directory
  file: dest={{ deploy_tmp_dir }} mode=755 owner=nodejs group=nodejs state=directory

- name: Grant permission over release directory to ansible_ssh_user
  acl: name={{ deploy_tmp_dir }} etype=user entity={{ ansible_ssh_user }} permissions=rwx state=present

- name: Rsync
  become: false
  synchronize: src={{ deploy_src }} dest={{ deploy_tmp_dir }} delete=yes rsync_opts="--exclude-from={{ deploy_exclude_path }}"

- name: Permission node lib
  command: chown -R nodejs.nodejs {{ deploy_tmp_dir }}

- name: Move node lib # using mv might create longer server interuptions
  command: rsync -a --delete {{ deploy_tmp_dir }}/ {{ deploy_dest }}/

- name: Create secrets destination path
  shell: "mkdir -p $(dirname {{ deploy_secrets_dest }})"
  
- name: Copy secrets
  copy: src={{ deploy_secrets_src }} dest={{ deploy_secrets_dest }} owner=nodejs group=nodejs
  when: deploy_secrets_src is defined

- name: Delete all previous release, except the one we just created
  shell: "find '{{ deploy_dir_prefix }}/{{ deploy_dir_parent }}' -maxdepth 1 ! -name '{{ deploy_dir_parent }}' ! -name '{{ deploy_build_id }}' | xargs rm -rf"
