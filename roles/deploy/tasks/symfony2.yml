---
# -e 'deploy_src=/path/to/local deploy_secrets_src=/path/to/local/secrets/file deploy_exclude_path=/path/to/exclude/file deploy_build_id=XXXX' --tags=symfony2
- name: Set deploy_dir_prefix
  set_fact: deploy_dir_prefix="/var/www"

- name: Set deploy_dir_parent
  set_fact: deploy_dir_parent="releases"

- name: Set deploy_dest
  set_fact: deploy_dest={{ deploy_dir_prefix }}/{{ deploy_dir_parent }}/{{ deploy_build_id }}

- name: Set deploy_src
  shell: "basename '{{ deploy_src }}'"
  register: site

- name: Set deploy_site variable
  set_fact: deploy_site={{ site.stdout }}

- name: Set deploy_secrets_dest
  set_fact: deploy_secrets_dest={{ deploy_dest }}/{{ deploy_site }}/app/config/parameters.yml

- name: Create release directory
  file: dest={{ deploy_dest }} mode=755 owner=ubuntu group=ubuntu state=directory

- name: Rsync
  sudo: False
  synchronize: src={{ deploy_src }} dest={{ deploy_dest }} delete=yes rsync_opts="--exclude-from={{ deploy_exclude_path }}"

- name: Permission release directory
  file: path={{ deploy_dest }} owner=ubuntu group=ubuntu state=directory recurse=yes

- name: Create app/cache app/logs
  file: dest={{ item }} state=directory owner=www-data group=www-data
  with_items:
    - "{{ deploy_dest }}/{{ deploy_site }}/app/cache"
    - "{{ deploy_dest }}/{{ deploy_site }}/app/logs"

- name: Set app/cache app/logs permissions
  command: setfacl -R -m u:www-data:rwX -m u:ubuntu:rwX {{ item }} & setfacl -dR -m u:www-data:rwX -m u:ubuntu:rwX {{ item }}
  with_items:
    - "{{ deploy_dest }}/{{ deploy_site }}/app/cache"
    - "{{ deploy_dest }}/{{ deploy_site }}/app/logs"

- name: Create secrets destination path
  shell: "mkdir -p $(dirname {{ deploy_secrets_dest }})"

- name: Copy secrets
  copy: src={{ deploy_secrets_src }} dest={{ deploy_secrets_dest }} owner=ubuntu group=ubuntu
  when: deploy_secrets_src is defined

- name: Warm up cache
  remote_user: ubuntu
  command: php {{ deploy_dest }}/{{ deploy_site }}/app/console cache:clear --env={{ env }} --no-debug

- name: Create symlink
  file: dest={{ deploy_dir_prefix }}/current src={{ deploy_dest }} state=link

# this will now work if custom deploy_dest is used
- name: Delete all previous release, except the one we just created
  shell: "find '{{ deploy_dir_prefix }}/{{ deploy_dir_parent }}' -maxdepth 1 ! -name '{{ deploy_dir_parent }}' ! -name '{{ deploy_build_id }}' | xargs rm -rf"
