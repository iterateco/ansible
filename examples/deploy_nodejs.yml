---
- hosts: "&{{ env | expand('tag_Env_') }}:{{ roles | expand('tag_Roles_') }}"
  sudo: True
  #accelerate: true
  vars_files:
    - group_vars/{{ env }}.yml
  vars:
    deploy_dir_prefix: /tmp
    deploy_dir_parent: releases
    deploy_tmp_dir: "{{ deploy_dir_prefix }}/{{ deploy_dir_parent }}/{{ build_id }}"

    deploy_site: NodeJsFolder
    deploy_path: ~/sites

    deploy_src: "{{ deploy_path }}/{{ deploy_site }}"
    deploy_dest: /home/nodejs/sites
    deploy_secrets_src: "{{ deploy_src }}/config/secrets_{{ env }}.json"
    deploy_secrets_dest: "{{ deploy_tmp_dir }}/{{ deploy_site }}/config/secrets.json"
    deploy_exclude_path: "{{ deploy_src }}/rsync_exclude_{{ env }}"

  tasks:
    - name: Create release directory
      file: dest={{ deploy_tmp_dir }} mode=755 owner=nodejs group=nodejs state=directory

    - name: Rsync
      synchronize: src={{ deploy_src }} dest={{ deploy_tmp_dir }} delete=yes rsync_opts="--exclude-from={{ deploy_exclude_path }}"

    - name: Copy credentials
      copy: src={{ deploy_secrets_src }} dest={{ deploy_secrets_dest }}

    - name: Permission node lib
      command: chown -R nodejs.nodejs {{ deploy_tmp_dir }}

    - name: Move node lib # using mv might create longer server interuptions
      command: rsync -a --delete {{ deploy_tmp_dir }}/ {{ deploy_dest }}/

    - name: Delete all previous release, except the one we just created
      shell: "find '{{ deploy_dir_prefix }}/{{ deploy_dir_parent }}' -maxdepth 1 ! -name '{{ deploy_dir_parent }}' ! -name '{{ build_id }}' | xargs rm -rf"