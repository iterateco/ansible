# This script runs on it's own. It's used to generate AMI images with
# whatever software is necessary already pre-installed.
#
# Note 1: you will need to declare the aws access key and aws secret key, which is different per project.
# Easiest way is to export them as environment variables.
# See here: http://docs.ansible.com/intro_dynamic_inventory.html#example-aws-ec2-external-inventory-script
#
# For more information about Ansible and aws, see here: http://docs.ansible.com/guide_aws.html
#
# Note 2: you will probably need to run this script with your ec2.ini destination variables set to public ips.
#
# export AWS_ACCESS_KEY_ID='XXXX'
# export AWS_SECRET_ACCESS_KEY='XXXX'
# export EC2_OVERRIDE_DESTVAR='public'
# Usage:
# ansible-playbook -i /etc/ansible/plugins/inventory/ec2.py --user=ubuntu --private-key=~/path/yourkey.pem ami.yml
---
- name: Create an instance
  hosts: localhost
  connection: local
  vars_files:
    - group_vars/ami.yml
  gather_facts: true
  tasks:
    - name: Launch Instance
      ec2:
        keypair={{ ami_keypair }}
        group={{ ami_security_group }}
        instance_type={{ ami_instance_type }}
        image={{ ami_base_image }}
        region={{ ami_aws_region }}
        vpc_subnet_id={{ ami_vpc_subnet }}
        assign_public_ip=true
        instance_tags='{"Name":"ami-{{ ansible_date_time.epoch }}"}'
        count=1
        wait=true
      register: ec2

    - name: Add new instance to host group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.instances

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_ip }} port=22 delay=10 timeout=320 state=started
      with_items: ec2.instances

- name: Provision an instance
  hosts: launched
  user: ubuntu
  sudo: true
  gather_facts: true
  vars:
    ami: true
  roles:
    - common
  tasks:
    - name: Set init services to manual start
      shell: echo manual | sudo tee /etc/init/{{ item }}.override
      with_items:
        - mysql
    - name: Set update-rc.d services to start manually
      command: sudo update-rc.d -f {{ item }} remove
      with_items:
        - apache2
        - memcached
    - name: Remove SSH keys before bundle
      command: sudo rm {{ item }}
      with_items:
        - /home/ubuntu/.ssh/authorized_keys
        - /root/.ssh/authorized_keys


- name: Create an AMI
  hosts: localhost
  connection: local
  vars_files:
    - group_vars/ami.yml
  gather_facts: false
  tasks:
    - name: Register new ami
      ec2_ami:
        aws_access_key={{ lookup('env','AWS_ACCESS_KEY_ID') }}
        aws_secret_key={{ lookup('env','AWS_SECRET_ACCESS_KEY') }}
        region={{ ami_aws_region }}
        instance_id={{ item }}
        wait=yes
        name="{{ ami_name }}-{{ ansible_date_time.epoch }}"
      with_items: ec2.instance_ids

- name: Terminate instances
  hosts: localhost
  connection: local
  vars_files:
    - group_vars/ami.yml
  gather_facts: false
  tasks:
    - name: Output instance ids
      debug: var={{ ec2.instance_ids }}

    - name: Terminate instances that were previously launched
      ec2:
        state=absent
        instance_ids={{ item }}
        region={{ ami_aws_region }}
      with_items: ec2.instance_ids

